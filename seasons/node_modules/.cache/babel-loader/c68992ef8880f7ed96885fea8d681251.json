{"ast":null,"code":"var _jsxFileName = \"/Users/mehrshadmatin/Desktop/seasons/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      erromsg: ''\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      //setstate!!!!!!!! format!!!!\n      this.setState({\n        lat: position.coords.latitude\n      });\n    }, err => {\n      this.setState({\n        erromsg: err.message\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    console.log('Component rerenderd');\n  }\n\n  render() {\n    if (this.state.erromsg && !this.state.lat) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, \" Error: \", this.state.erromsg);\n    }\n\n    if (!this.state.erromsg && this.state.lat) {\n      return /*#__PURE__*/React.createElement(SeasonDisplay, {\n        lat: this.state.lat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        msg: \"Please accept location request!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      });\n    }\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 2\n  }\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/mehrshadmatin/Desktop/seasons/src/index.js"],"names":["React","ReactDOM","SeasonDisplay","Spinner","App","Component","state","lat","erromsg","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","componentDidUpdate","console","log","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,OAAO,EAAE;AAAtB,KAFwB;AAAA;;AAIhCC,EAAAA,iBAAiB,GAAE;AAClBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACCC,QAAD,IAAa;AACZ;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,GAAG,EAAEO,QAAQ,CAACE,MAAT,CAAgBC;AAAtB,OAAd;AAGA,KAND,EAOCC,GAAD,IAAS;AAER,WAAKH,QAAL,CAAc;AAACP,QAAAA,OAAO,EAAEU,GAAG,CAACC;AAAd,OAAd;AACA,KAVD;AAaA;;AACDC,EAAAA,kBAAkB,GAAE;AAEnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA;;AAEDC,EAAAA,MAAM,GAAE;AAGP,QAAI,KAAKjB,KAAL,CAAWE,OAAX,IAAsB,CAAC,KAAKF,KAAL,CAAWC,GAAtC,EAA0C;AACzC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc,KAAKD,KAAL,CAAWE,OAAzB,CAAP;AACA;;AAED,QAAI,CAAC,KAAKF,KAAL,CAAWE,OAAZ,IAAuB,KAAKF,KAAL,CAAWC,GAAtC,EAA0C;AACzC,0BAAO,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAI,KAAKD,KAAL,CAAWC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA,KAFD,MAGK;AACJ,0BAAO,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAG,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA;AAGD;;AAvC+B;;AA4CjCN,QAAQ,CAACsB,MAAT,eACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,EAECC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAFD","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay'\nimport Spinner from './Spinner'\n\nclass App extends React.Component{\n\n\tstate = { lat: null, erromsg: ''};\n\n\tcomponentDidMount(){\n\t\twindow.navigator.geolocation.getCurrentPosition(\n\t\t(position)=> {\n\t\t\t//setstate!!!!!!!! format!!!!\n\t\t\tthis.setState({lat: position.coords.latitude});\n\n\n\t\t},\n\t\t(err) => {\n\n\t\t\tthis.setState({erromsg: err.message});\n\t\t}\n\n\t\t);\n\t}\n\tcomponentDidUpdate(){\n\n\t\tconsole.log('Component rerenderd');\n\t}\n\n\trender(){\n\n\n\t\tif (this.state.erromsg && !this.state.lat){\n\t\t\treturn <div> Error: {this.state.erromsg}</div>\n\t\t}\n\n\t\tif (!this.state.erromsg && this.state.lat){\n\t\t\treturn <SeasonDisplay lat = {this.state.lat}/>\n\t\t}\n\t\telse {\n\t\t\treturn <Spinner msg = \"Please accept location request!\"/>;\n\t\t}\n\n\n\t}\n}\n\n\n\nReactDOM.render(\n\t<App />,\n\tdocument.querySelector('#root'));"]},"metadata":{},"sourceType":"module"}